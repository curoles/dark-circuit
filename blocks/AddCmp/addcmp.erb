<%#Template to generate A+B==Z adder-comparator-%>
<%#Reference: The Power of Carry-Save Addition, D. R. Lutz 1994-%>
// =================================================================================================
// =                                                                                               =
// = This document is protected by copyright and other related rights and the practice or          =
// = implementation of the information contained in this document may be protected by one or more  =
// = patents or pending patent applications. No part of this document may be reproduced in any     =
// = form and by any means without the express prior written permission of Tachyum.                =
// =                                                                                               =
// =                                 COPYRIGHT (C) 2019 Dark Circuit                               =
// =                                                                                               =
// =================================================================================================
//
//       |         |         |         |         |         |         |         |         |         |
//      10        20        30        40        50        60        70        80        90       100
// 4567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

<%size = sz.to_i; groups = (size + 3)/4 -%>
module AddCmp<%=size%> (
    input  wire [<%=size%>-1:0] a,
    input  wire [<%=size%>-1:0] b,
    input  wire [<%=size%>-1:0] c,
    output wire          eq
);

wire [<%=size%>-1:0] s;
wire [<%=size%>  :0] cy;
wire [<%=size%>-1:0] t;
<%for group in 0..(groups-1) do-%>
wire group<%=group%>;
<%end-%>

assign cy[0] = 0;

<%for i in 0..(size-1) do-%>
FullAdder u_fa<%=i%>(.in1(a[<%=i%>]), .in2(b[<%=i%>]), .ci(~c[<%=i%>]), .sum(s[<%=i%>]), .co(cy[<%=i+1%>]));
<%end-%>

<%for i in 0..(size-1) do-%>
assign t[<%=i%>] = cy[<%=i%>] ^ s[<%=i%>];
<%end-%>

<%for g in 0..(groups-1) do-%>
assign group<%=g%> = ~(t[<%=g*4%>]<%for n in (g*4+1)..[g*4+3,size-1].min do-%> & t[<%=n%>]<%end-%>);
<%end-%>

assign eq = ~(group0<%for g in 1..(groups-1) do-%> | group<%=g%><%end-%>);

endmodule
